@using System.Diagnostics
@using System.Text.Json

<Button OnClick=SerializeTest>Serialize Test</Button>

<ItemSelect Label="Datapoints" Items=points @bind-SelectedValue=pointsToLoad Changed=LoadData />


<Dimmer Active=isLoading ShowSpinner=false>
    <ApexChart TItem="TimeSeries"
               Title="Value"
               Height="150"
               XAxisType="XAxisType.Datetime"
               @ref=chart>

      
        <ApexPointSeries TItem="TimeSeries"
                         Items="timeSeries.Take(pointsToLoad)"
                         Name="Value"
                         SeriesType="SeriesType.Line"
                         XValue="@(e => e.Date)"
                         YValue="@( e=> e.Value)"
                         Stroke="@(new SeriesStroke { Width = 2, Color="#1F15E5"})" />
    </ApexChart>
</Dimmer>

@if (isLoading)
{
    <h3>Loading<span class="animated-dots"></span></h3>
}
else
{
    <h3>@message</h3>
}


@code {


    private ApexChart<TimeSeries> chart;
    private List<int> points = new List<int> { 100, 1000, 5000, 10000 };
    private int pointsToLoad = 100;
    private IEnumerable<TimeSeries> timeSeries = new TimeSeriesGenerator(10000).TimeSeries;
    private string message;
    private IEnumerable<DataPoint<TimeSeries>> data;

    private bool isLoading;

    protected override void OnInitialized()
    {
        PopulateData();
    }

    private async Task LoadData()
    {
        isLoading = true;
        await Task.Delay(10);
        PopulateData();
        var sw = new Stopwatch();
        sw.Start();

        await Task.Delay(10);

        await chart.UpdateSeriesAsync(false);
        sw.Stop();

        message = $"Updated {pointsToLoad} points in {sw.ElapsedMilliseconds.ToString("N0")}ms";
        isLoading = false;
    }

    private void PopulateData()
    {

        data = timeSeries.Take(pointsToLoad).Select(e => new DataPoint<TimeSeries>
            {
                X = e.Date,
                Y = e.Value,
                Items = new List<TimeSeries> { e }
            });
    }

    private void SerializeTest()
    {
        var series = chart.Options.Series;
        var options = new ChartSerializer().GetOptions<TimeSeries>();
        var sw = new Stopwatch();
        sw.Start();

        // var result = serializer.
        var result = System.Text.Json.JsonSerializer.Serialize(series, options);
        sw.Stop();
        message = $"Test [{pointsToLoad}] {sw.ElapsedMilliseconds.ToString("N")}ms";
    }

    }